# -*- coding: utf-8 -*-
"""non personalized movie recommender.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1qqmSA3zMlr83szEvMnyt1_cUN5Y7lfZJ
"""

import pandas as pd
import numpy as np
import tensorflow as tf
from tensorflow.keras.layers import Input, Dense, Flatten, Embedding, Concatenate
from tensorflow.keras.models import Model

!wget -nc http://files.grouplens.org/datasets/movielens/ml-20m.zip
!unzip -n ml-20m.zip

df=pd.read_csv('ml-20m/ratings.csv')
df.head()

df['rating'].value_counts()

print(df['userId'].nunique(), df['movieId'].nunique())
print(df['userId'].max(), df['movieId'].max())

df['new_userId']  = pd.Categorical(df['userId']).codes
df['new_movieId'] = pd.Categorical(df['movieId']).codes
print(df['new_userId'].nunique(), df['new_movieId'].nunique())
print(df['new_userId'].max(), df['new_movieId'].max())

num_user = df['new_userId'].nunique()
num_movie = df['new_movieId'].nunique()

dim = 10;
user = Input(shape=(1,));
user_emb = Embedding(num_user,dim)(user);
movie = Input(shape=(1,));
movie_emb = Embedding(num_movie, dim)(movie);
u_emb = Flatten()(user_emb);
m_emb = Flatten()(movie_emb);
x = Concatenate()([u_emb, m_emb]);
x = Dense(100, activation='relu')(x);
x = Dense(20, activation='relu')(x);
x = Dense(1)(x);
model = Model(inputs=[user, movie], outputs=x);
model.summary()

df.drop(columns=['userId','movieId','timestamp'],inplace=True)
df.head()

from sklearn.model_selection import train_test_split
X = df[['new_userId','new_movieId']]
y = df['rating']
X_train, X_test, y_train, y_test = train_test_split(X, y, random_state=42, test_size = 0.2)
train_user, train_movie = X_train['new_userId'], X_train['new_movieId']
test_user, test_movie = X_test['new_userId'], X_test['new_movieId']

model.compile(optimizer='adam', loss='mse');
history = model.fit(x=[train_user, train_movie], y = y_train, batch_size= 4096, epochs=10, verbose=2, 
                    validation_data=([test_user, test_movie], y_test))

